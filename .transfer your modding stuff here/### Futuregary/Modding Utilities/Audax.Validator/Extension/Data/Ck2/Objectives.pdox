(Validator Objectives) = {
	Type = Default
	FriendlyName = "Objectives"
	(FileGroup "common\objectives" "*.txt")
	ValidatorName = ObjectiveFile
}

(Type ObjectiveFile) = {
	(Ch Y N) = { Left = { Type = String } Right = ObjectiveDef (CheckKey "*_desc" Left IfNot = NoCheckKey) (CheckKey "*_title" Left IfNot = NoCheckKey) }
}

Global = {
(Type.Enum Objective) = { Import = { (FileGroup "common\objectives" "*.txt") SelectPath = "*\[L]" } }
}

(Type ObjectiveDef) = {
	Single = { Left = "type" Right = { Literal = "liege_titles" Literal = "character" 
		Literal = "realm_characters" Literal = "spouse" Literal = "realm_titles"
		Literal = "vassal_titles" Literal = "realm_characters_plus" Literal = "liege_titles_w_claimant"
		Literal = "rep_trade_posts" } }

	NodeSwitcher = {
		Node = "type"
		
		Switch = {
			"realm_titles" = TitleObjective
			"vassal_titles" = TitleObjective
			"liege_titles" = TitleObjective
			"liege_titles_w_claimant" = TitleObjective
			"character" = CharObjective
			"realm_characters" = CharObjective
			"realm_characters_plus" = CharObjective
			"spouse" = CharObjective
			"rep_trade_posts" = TradePostObjective
		}
	}
	
	Optional = { Left = "exclusive" Right = Bool }
	Optional = { Left = "military_plot" Right = Bool }
	Optional = { Left = "expectation_of_liege" Right = Bool }
	Optional = { Left = "intrigue_plot" Right = Bool }
	Optional = { Left = "murder_plot" Right = Bool }
	Optional = { Left = "vassal_rank_plot" Right = Bool }
	Optional = { Left = "vassal_intrigue_plot" Right = Bool }
	Optional = { Left = "fertility" Right = Double }
	Optional = { Left = "rel_head_loyalist" Right = Bool }
	Optional = { Left = "cancel_on_leader_death" Right = Bool }
	Optional = { Left = "warning_level" Right = Double }
	
	(If If = V110) = {
		Optional = { Left = "ai_capital_kingdom_focus" Right = Bool }
		Optional = { Left = "can_cancel" Right = Bool }

	}
}

(Type TradePostObjective) = {
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "membership" Right = TitleObjectiveMembershipChance }
	Optional = { Left = "allow" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "allow_join" Right = TitleObjectiveTrigger }
	Optional = { Left = "player_allow" Right = TitleObjectiveTrigger }
	Single = { Left = "chance" Right = TitleChanceClause }
	Single = { Left = "success" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = TitleObjectiveCommand }
	Optional = { Left = "creation_effect" Right = TitleObjectiveCommand }
	Single = { Left = "effect" Right = TitleObjectiveCommand }

}

#region Title objectives

(Type TitleObjective) = {
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "membership" Right = TitleObjectiveMembershipChance }
	Optional = { Left = "allow" Right = TitleObjectiveTrigger }
	Optional = { Left = "player_allow" Right = TitleObjectiveTrigger }
	Optional = { Left = "allow_join" Right = TitleObjectiveMembershipTrigger }
	Single = { Left = "chance" Right = TitleChanceClause }
	Single = { Left = "success" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = TitleObjectiveCommand }
	Optional = { Left = "creation_effect" Right = TitleObjectiveCommand }
	Single = { Left = "effect" Right = TitleObjectiveCommand }

}

(Type TitleChanceClause) = {
	Single = { Left = "factor" Right = NnDbl }
	(Ch N Y) = { Left = "modifier" Right = TitleChanceModifier }
}

(Type TitleObjectiveMembershipChance) = {
	Single = { Left = "factor" Right = NnDbl }
	(Ch N Y) = { Left = "modifier" Right = TitleObjectiveMembershipModifier }
}

(Type TitleChanceModifier) = {
	Inherits = FactorModifier
	Single = { Left = "factor" Right = NnDbl }
	
	Inherits = TitleObjectiveTrigger
}

(Type TitleObjectiveMembershipModifier) = {
	Inherits = FactorModifier
	Single = { Left = "factor" Right = NnDbl }
	
	Inherits = TitleObjectiveMembershipTrigger
}

(Type TitleObjectiveTrigger) = { ContextValidator = TitleObjectiveTrigger }
(ContextValidator TitleObjectiveTrigger) = {
	Inherits = TitleTrigger
	FromTarget = Char
}

(Type TitleObjectiveMembershipTrigger) = { ContextValidator = TitleObjectiveMembershipTrigger }
(ContextValidator TitleObjectiveMembershipTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
	FromFromTarget = Title
}

(Type TitleObjectiveCommand) = { ContextValidator = TitleObjectiveCommand }
(ContextValidator TitleObjectiveCommand) = {
	Inherits = TitleCommand
	FromTarget = Char
}


#endregion Title objectives

#region Char objectives

(Type CharObjective) = {
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "membership" Right = CharObjectiveMembershipChance }
	Optional = { Left = "allow" Right = CharObjectiveTrigger }
	Optional = { Left = "player_allow" Right = CharObjectiveTrigger }
	Optional = { Left = "allow_join" Right = CharObjectiveMembershipTrigger }
	Single = { Left = "chance" Right = CharChanceClause }
	Single = { Left = "success" Right = CharObjectiveTrigger }
	Optional = { Left = "abort" Right = CharObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = CharObjectiveCommand }
	Optional = { Left = "creation_effect" Right = CharObjectiveCommand }
	Single = { Left = "effect" Right = CharObjectiveCommand }
	

}

(Type CharObjectiveTrigger) = { ContextValidator = CharObjectiveTrigger }
(ContextValidator CharObjectiveTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
}

(Type CharChanceClause) = {
	Single = { Left = "factor" Right = NnDbl }
	(Ch N Y) = { Left = "modifier" Right = CharChanceModifier }
}

(Type CharChanceModifier) = {
	Inherits = FactorModifier
	Single = { Left = "factor" Right = NnDbl }
	
	Inherits = CharObjectiveTrigger
}

(Type CharObjectiveCommand) = { ContextValidator = CharObjectiveCommand }
(ContextValidator CharObjectiveCommand) = {
	Inherits = CharCommand
	FromTarget = Char
}

(Type CharObjectiveMembershipChance) = {
	Single = { Left = "factor" Right = NnDbl }
	(Ch N Y) = { Left = "modifier" Right = CharObjectiveMembershipModifier }
}

(Type CharObjectiveMembershipModifier) = {
	Inherits = FactorModifier
	Single = { Left = "factor" Right = NnDbl }
	
	Inherits = CharObjectiveMembershipTrigger
}

(Type CharObjectiveMembershipTrigger) = { ContextValidator = CharObjectiveMembershipTrigger }
(ContextValidator CharObjectiveMembershipTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
	FromFromTarget = Char
}


#endregion Char objectives


#region Province objectives

(Type ProvinceObjective) = {
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "membership" Right = ProvinceObjectiveMembershipChance }
	Optional = { Left = "allow" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "player_allow" Right = ProvinceObjectiveTrigger }
	Single = { Left = "chance" Right = ProvinceChanceClause }
	Single = { Left = "success" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "abort" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = ProvinceObjectiveCommand }
	Optional = { Left = "creation_effect" Right = ProvinceObjectiveCommand }
	Single = { Left = "effect" Right = ProvinceObjectiveCommand }

}

(Type ProvinceChanceClause) = {
	Single = { Left = "factor" Right = NnDbl }
	(Ch N Y) = { Left = "modifier" Right = ProvinceChanceModifier }
}

(Type ProvinceObjectiveMembershipChance) = {
	Single = { Left = "factor" Right = NnDbl }
	(Ch N Y) = { Left = "modifier" Right = ProvinceObjectiveMembershipModifier }
}

(Type ProvinceChanceModifier) = {
	Inherits = FactorModifier
	Single = { Left = "factor" Right = NnDbl }
	
	Inherits = ProvinceObjectiveTrigger
}

(Type ProvinceObjectiveMembershipModifier) = {
	Inherits = FactorModifier
	Single = { Left = "factor" Right = NnDbl }
	
	Inherits = ProvinceObjectiveMembershipTrigger
}

(Type ProvinceObjectiveTrigger) = { ContextValidator = ProvinceObjectiveTrigger }
(ContextValidator ProvinceObjectiveTrigger) = {
	Inherits = ProvTrigger
	FromTarget = Char
}

(Type ProvinceObjectiveMembershipTrigger) = { ContextValidator = ProvinceObjectiveMembershipTrigger }
(ContextValidator ProvinceObjectiveMembershipTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
	FromFromTarget = Province
}

(Type ProvinceObjectiveCommand) = { ContextValidator = ProvinceObjectiveCommand }
(ContextValidator ProvinceObjectiveCommand) = {
	Inherits = ProvCommand
	FromTarget = Char
}


#endregion Province objectives








## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1)
#
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
#

# THIS IS A BLANK FILE TO RECORD UNUSED CB'S AND OVERWRITE VANILLA



# Currenly Out-of-Service :


#imperial_reconquest = {
#	name = CB_NAME_IMPERIAL
#	war_name = WAR_NAME_IMPERIAL
#	sprite = 17
#	truce_days = 3650
#	is_permanent = yes
#	
#	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
#	
#	can_use = {
#		ROOT = {
#			OR = {
#				has_landed_title = e_byzantium
#				has_landed_title = e_roman_empire
#			}
#			independent = yes
#			religion_group = christian
#			NOT = { same_realm = FROM }
#		}
#		FROM = {
#			NOT = { religion_group = muslim }
#		}
#	}
#	
#	can_use_title = {
#		OR = {
#			de_jure_liege_or_above = k_byzantium
#			de_jure_liege_or_above = k_anatolia
#			de_jure_liege_or_above = k_armenia
#			de_jure_liege_or_above = k_bulgaria
#			de_jure_liege_or_above = k_serbia
#			de_jure_liege_or_above = k_croatia
#			de_jure_liege_or_above = k_italy
#			de_jure_liege_or_above = k_sicily
#			de_jure_liege_or_above = k_bavaria
#			de_jure_liege_or_above = k_burgundy
#			de_jure_liege_or_above = k_france
#			de_jure_liege_or_above = k_aquitaine
#			de_jure_liege_or_above = k_brittany
#			de_jure_liege_or_above = k_england
#			de_jure_liege_or_above = k_wales
#			de_jure_liege_or_above = k_frisia
#			de_jure_liege_or_above = k_lotharingia
#			de_jure_liege_or_above = k_aragon
#			de_jure_liege_or_above = k_castille
#			de_jure_liege_or_above = k_andalusia
#			de_jure_liege_or_above = k_leon
#			de_jure_liege_or_above = k_spanish_galicia
#			de_jure_liege_or_above = k_portugal
#			de_jure_liege_or_above = k_navarra
#			de_jure_liege_or_above = k_syria
#			de_jure_liege_or_above = k_jerusalem
#			de_jure_liege_or_above = k_egypt
#			de_jure_liege_or_above = k_africa
#			de_jure_liege_or_above = k_mauretania
#			de_jure_liege_or_above = k_papal_state
#			de_jure_liege_or_above = k_venice
#		}
#	}
#	
#	is_valid = {
#		ROOT = {
#			OR = {
#				has_landed_title = e_byzantium
#				has_landed_title = e_roman_empire
#			}
#			independent = yes
#			religion_group = christian
#			NOT = { same_realm = FROM }
#		}
#	}
#	
#	on_success = {
#		any_attacker = {
#			limit = { character = ROOT }
#			participation_scaled_prestige = 100
#		}
#		any_attacker = {
#			limit = { NOT = { character = ROOT } }
#			hidden_tooltip = { 
#				participation_scaled_prestige = 100
#			}
#		}
#		FROM = { prestige = -100 }
#	}
#	
#	
#	on_success_title = {
#		ROOT = {
#			gain_settlements_under_title = {
#				title = PREV
#				enemy = FROM
#			}
#		}
#	}
#	
#	on_fail = {
#		ROOT = { prestige = -150 }
#	}
#	
#	on_reverse_demand = {
#		ROOT = {
#			transfer_scaled_wealth = {
#				to = FROM
#				value = 4.0
#			}
#			ROOT = { prestige = -200 }
#		}
#		any_defender = {
#			limit = { character = FROM }
#			participation_scaled_piety = 100
#			participation_scaled_prestige = 200
#			if = {
#				limit = {
#					religion_group = muslim
#				}
#				participation_scaled_decadence = -10
#			}
#		}
#		any_defender = {
#			limit = { NOT = { character = FROM } }
#			hidden_tooltip = {
#				participation_scaled_piety = 100
#				participation_scaled_prestige = 200
#				if = {
#					limit = {
#						religion_group = muslim
#					}
#					participation_scaled_decadence = -10
#				}
#			}
#		}
#	}
#	
#	attacker_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#	
#	attacker_ai_defeat_worth = {
#		factor = 100
#	}
#	
#	defender_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#	
#	defender_ai_defeat_worth = {
#		factor = 100
#	}
#}

# The special CB for the Rise of the Shi'a Caliphate
#shia_caliphate_rising = {
#	name = CB_NAME_SHIA_CALIPHATE_RISING
#	war_name = WAR_NAME_SHIA_CALIPHATE_RISING
#	sprite = 8
#	truce_days = 365
#	hostile_against_others = no
#	is_permanent = yes
#	check_de_jure_tier = KING # this scans all de jure kingdoms for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
#	apply_short_occ_mod = no # Do not apply the 'recently_conquered' modifier to Holdings
#
#	can_use = {
#		ROOT = {
#			has_character_flag = shia_caliphate_pretender
#		}
#	}
#	
#	is_valid_title = {
#		ROOT = {
#			has_character_flag = shia_caliphate_pretender
#		}
#		FROM = {
#			any_realm_title = {
#				de_jure_liege_or_above = PREVPREV
#			}
#		}
#		d_shiite = {
#			has_holder = no
#		}
#	}
#
#	on_success = {
#		clr_global_flag = shia_caliphate_revolt_ongoing
#		ROOT = {
#			piety = 500
#			religion_authority = {
#				modifier = rise_of_the_shia_caliphate
#			}
#			clr_character_flag = shia_caliphate_pretender
#		}
#		FROM = {
#			piety = -500
#		}
#	}
#	
#	on_success_title = {
#		custom_tooltip = tribal_invasion_succ_tip
#		hidden_tooltip = {
#			d_shiite = {
#				usurp_title = ROOT
#			}
#			FROM = {
#				random_realm_province = {
#					limit = {
#						de_jure_liege_or_above = PREVPREV
#						NOT = { religion = ROOT }
#						religion_group = muslim
#					}
#					religion = ROOT
#				}
#				random_realm_province = {
#					limit = {
#						de_jure_liege_or_above = PREVPREV
#						NOT = { religion = ROOT }
#						religion_group = muslim
#					}
#					religion = ROOT
#				}
#				random_realm_province = {
#					limit = {
#						de_jure_liege_or_above = PREVPREV
#						NOT = { religion = ROOT }
#						religion_group = muslim
#					}
#					religion = ROOT
#				}
#				random_realm_province = {
#					limit = {
#						de_jure_liege_or_above = PREVPREV
#						NOT = { religion = ROOT }
#						religion_group = muslim
#					}
#					religion = ROOT
#				}
#				random_realm_province = {
#					limit = {
#						de_jure_liege_or_above = PREVPREV
#						NOT = { religion = ROOT }
#						religion_group = muslim
#					}
#					religion = ROOT
#				}
#			}
#			ROOT = {
#				occupy_minors_of_occupied_settlements = FROM
#				gain_all_occupied_titles = FROM
#				vassalize_or_take_under_title = {
#					title = PREV
#					enemy = FROM
#				}
#				
#				any_demesne_title = {
#					limit = { tier = BARON }
#					remove_holding_modifier = recently_conquered
#					refill_holding_levy = yes
#				}
#				usurp_title = PREV
#			}
#			
#			if = {
#				limit = {
#					FROM = { is_liege_or_above = ROOT }
#				}
#				FROM = { imprison = ROOT }
#			}
#		}
#	}
#
#	on_fail = {
#		clr_global_flag = shia_caliphate_revolt_ongoing
#		FROM = {
#			piety = 250
#		}
#		ROOT = {
#			piety = -250
#			clr_character_flag = shia_caliphate_pretender
#		}
#	}
#
#	on_reverse_demand = {
#		clr_global_flag = shia_caliphate_revolt_ongoing
#		ROOT = {
#			piety = -500
#			clr_character_flag = shia_caliphate_pretender
#			imprison = FROM
#		}
#		FROM = {
#			piety = 250
#		}
#		any_defender = {
#			limit = { character = FROM }
#			participation_scaled_piety = 250
#		}
#		any_defender = {
#			limit = { NOT = { character = FROM } }
#			hidden_tooltip = { participation_scaled_piety = 250 }
#		}
#	}
#	
#	on_attacker_leader_death = {
#		clr_global_flag = shia_caliphate_revolt_ongoing
#		ROOT = {
#			clr_character_flag = shia_caliphate_pretender
#		}
#		end_war = invalid
#	}
#
#	attacker_ai_victory_worth = {
#		factor = 200
#	}
#	
#	attacker_ai_defeat_worth = {
#		factor = 100
#	}
#
#	defender_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#	
#	defender_ai_defeat_worth = {
#		factor = 100
#	}
#}
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
#
#muslim_county_conquest = { 
#	name = CB_NAME_COUNTY_CONQUEST
#	war_name = WAR_NAME_COUNTY_CONQUEST
#	sprite = 16
#	truce_days = 1825
#	hostile_against_others = yes
#	is_permanent = yes
#	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
#	press_claim = yes
#	can_ask_to_join_war = no
#	
#	piety_cost = 50
#	
#	can_use = {
#		ROOT = {
#			NOT = { is_liege_or_above = FROM }
#		}
#	}
#
#	can_use_title = {
#		tier = count
#		OR = {
#			FROM = {
#				has_landed_title = PREV
#			}
#			holder_scope = {
#				is_liege_or_above = FROM
#				NOT = { same_realm = ROOT }
#			}
#		}
#		
#		ROOT = {
#			religion_group = muslim
#		}
#
#		NOT = {
#			OR = {
#				ROOT = {
#					has_landed_title = PREV
#				}
#				holder_scope = {
#					is_liege_or_above = ROOT
#				}
#			}
#		}
#		
#		location = {
#			any_neighbor_province = {
#				owner = {
#					OR = {
#						character = ROOT
#						is_liege_or_above = ROOT
#					}
#				}
#			}
#		}
#	}
#
#	is_valid_title = {
#		OR = {
#			FROM = {
#				has_landed_title = PREV
#			}
#			holder_scope = {
#				is_liege_or_above = FROM
#			}
#		}
#	}
#
#	on_success_title = {
#		if = {
#			limit = {
#				holder_scope = {
#					tier = count
#					NOT = { num_of_count_titles = 2 }
#					lower_tier_than = ROOT
#				}
#			}
#
#			holder_scope = {
#				set_defacto_liege = ROOT
#			}
#		}
#
#		if = {
#			limit = {
#				holder_scope = {
#					OR = {
#						higher_tier_than = count
#						num_of_count_titles = 2
#						NOT = { lower_tier_than = ROOT }
#					}
#				}
#			}
#			usurp_title_plus_barony_if_unlanded = ROOT
#			any_de_jure_vassal_title = { # take all baronies under the one we're fighting for
#				limit = {
#					has_holder = yes
#					NOT = {
#						de_facto_liege = PREV
#					}
#					holder_scope = {
#						OR = {
#							character = FROM
#							is_liege_or_above = FROM
#						}
#					}
#				}
#				usurp_title_plus_barony_if_unlanded = ROOT
#			}
#		}
#		any_attacker = {
#			limit = { character = ROOT }
#			participation_scaled_prestige = 100
#		}
#		any_attacker = {
#			limit = { NOT = { character = ROOT } }
#			hidden_tooltip = { participation_scaled_prestige = 100 }
#		}
#	}
#
#	on_fail_title = {
#		ROOT = {
#			prestige = -100
#		}
#		any_defender = {
#			limit = { character = FROM }
#			participation_scaled_prestige = 50
#		}
#		any_defender = {
#			limit = { NOT = { character = FROM } }
#			hidden_tooltip = { participation_scaled_prestige = 50 }
#		}
#	}
#
#	on_reverse_demand = {
#		ROOT = {
#			prestige = -200
#			transfer_scaled_wealth = {
#				to = FROM
#				value = 4.0
#			}
#		}
#		any_defender = {
#			limit = { character = FROM }
#			participation_scaled_prestige = 100
#		}
#		any_defender = {
#			limit = { NOT = { character = FROM } }
#			hidden_tooltip = { participation_scaled_prestige = 100 }
#		}
#	}
#
#	attacker_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#	
#	attacker_ai_defeat_worth = {
#		factor = 100
#	}
#
#	defender_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#	
#	defender_ai_defeat_worth = {
#		factor = 100
#	}
#}
#

# Divine March
# availability: reformed pagans NOTE:currently undefined!!!
#pagan_holy_war = {
#	name = CB_NAME_RELIGIOUS
#	war_name = WAR_NAME_RELIGIOUS
#	sprite = 9
#	truce_days = 1825
#	is_permanent = yes
#
#	is_holy_war = yes
#	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
#	
#	piety_cost = 500
#
#	can_use = {
#		ROOT = {
#			OR = { #INSERT REFORMABLE RELIGIONS AND GREAT_HOLY_WAR CRUSADE USERS HERE
#			}
#			NOT = { same_realm = FROM }
#			NOT = { religion = FROM }
#			top_liege = {
#				religion = ROOT
#			}
#		}
#	}
#	
#	
#	can_use_gui = {
#	ROOT = {
#		piety = 500
#		}
#		}
#	can_use_title = {
#		# The attacker needs at least one county in the target kingdom, or a border, or be only two sea zones away from one of your counties
#		any_direct_de_jure_vassal_title = {
#			OR = {
#				holder_scope = {
#					OR = {
#						character = ROOT
#						is_liege_or_above = ROOT
#					}
#				}
#				location = {
#					any_neighbor_province = {
#						OR = {
#							AND = {
#								has_owner = yes
#								owner = {
#									OR = {
#										character = ROOT
#										is_liege_or_above = ROOT
	#								}
	#							}
	#						}
#							AND = {
#								is_land = no
#								any_neighbor_province = {
#									OR = {
#										AND = {
#											has_owner = yes
#											owner = {
#												OR = {
#													character = ROOT
#													is_liege_or_above = ROOT
#												}
#											}
#										}
#										AND = {
#											is_land = no
#											any_neighbor_province = {
#												owner = {
#													OR = {
#														character = ROOT
#														is_liege_or_above = ROOT
#													}
#												}
#											}
#										}
#									}
#								}
#							}
#						}
#					}
#				}
#			}
#		}
#	}
#
#	is_valid = {
#		ROOT = {
#			OR = { ###INSERT REFORMABLE/GREAT_HOLY_WAR RELIGIONS HERE
#				
#			}
#			NOT = { same_realm = FROM }
#			NOT = { religion = FROM }
#			top_liege = {
#				NOT = { religion = FROM }
#			}
#		}
#	}
#	
#	on_success = {
#	
#		#any_attacker = {
#		#	limit = { character = ROOT }
#		#	participation_scaled_piety = 100
#		#	participation_scaled_prestige = 50
#		#}
#		any_attacker = {
#			limit = { NOT = { character = ROOT } }
#			hidden_tooltip = { 
#				participation_scaled_piety = 100
#				participation_scaled_prestige = 50
#			}
#		}
#		
#		ROOT = { 
#			piety = 250
#			prestige = 250
#			
#			religion_authority = {
#				modifier = won_crusade
#				years = 20
#			}
#		}
#		FROM = { 
#			religion_authority = {
#				modifier = lost_holy_war
#				years = 20
#			}		
#		}
#		FROM = { piety = -100 }
#		FROM = { prestige = -50 }
#	}
#
#	on_success_title = {
#		custom_tooltip = religious_cb_succ_tip
#		hidden_tooltip = {
#			ROOT = {
#				vassalize_or_take_under_title = {
#					title = PREV
#					enemy = FROM
#					same_religion = yes # Only vassalize rulers of my religion
#				}
#			}
#		}
#	}
#
#	on_fail = {
#		ROOT = { piety = -50 }
#		ROOT = { prestige = -100 }
#	}
#
#	on_reverse_demand = {
#		ROOT = {
#			prestige = -250
#			piety = -250
#			transfer_scaled_wealth = {
#				to = FROM
#				value = 2.50
#			}
#		}
#		any_defender = {
#			limit = { character = FROM }
#			participation_scaled_piety = 200
#			participation_scaled_prestige = 100
#		}
#		any_defender = {
#			limit = { NOT = { character = FROM } }
#			hidden_tooltip = { 
#				participation_scaled_piety = 200
#				participation_scaled_prestige = 100
#			}
#		}
#		ROOT = { 
#			religion_authority = {
#				modifier = lost_crusade
#				years = 20
#			}
#		}
#		FROM = { 
#			religion_authority = {
#				modifier = won_crusade
#				years = 20
#			}		
#		}
#	}
#
#	attacker_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#	
#	attacker_ai_defeat_worth = {
#		factor = 100
#	}
#
#	defender_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#	
#	defender_ai_defeat_worth = {
#		factor = 100
#	}
#}
